/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode removeElements(ListNode head, int val) {
        // no elemets in Linkedlist
        if (head == null)
	        
            return head;
        // only one element in Linkedlist    
        if (head.next == null){
            
            if (head.val == val){
                
                head = null;
            }
            return head;
        }
	
	// more than 1 elements in LinkedList
	// create two points. point start, which won't move, is for retrun the listnode.
	// the other point checkpoint, which is to traverse the linkedlist
        ListNode start = new ListNode(-1);
        ListNode checkPoint = start;
        
        start.next = head;
        
        while (checkPoint.next != null){
            
            if (checkPoint.next.val == val){
                
                if (checkPoint.next.next != null){
                    checkPoint.next = checkPoint.next.next;
                }else{
                    checkPoint.next = null;
                }
            }else{
                checkPoint = checkPoint.next;
            }
        }
    
        return start.next;

    }
}
